# Generated by Django 4.2.7 on 2025-06-01 20:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text='When the log entry was created')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', help_text='Log severity level', max_length=10)),
                ('message', models.TextField(help_text='The actual log message content')),
                ('source', models.CharField(default='unknown', help_text='Source of the log (e.g., module, service)', max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address associated with the log entry', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string if applicable', null=True)),
                ('request_method', models.CharField(blank=True, help_text='HTTP method if web request log', max_length=10, null=True)),
                ('status_code', models.IntegerField(blank=True, help_text='HTTP status code if applicable', null=True)),
                ('response_time', models.FloatField(blank=True, help_text='Response time in milliseconds', null=True)),
                ('raw_log', models.TextField(help_text='Original raw log entry before parsing')),
                ('parsed_data', models.JSONField(blank=True, default=dict, help_text='Additional parsed data as JSON')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Log Entry',
                'verbose_name_plural': 'Log Entries',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='logs_logent_timesta_1e81d2_idx'), models.Index(fields=['level'], name='logs_logent_level_d0bef2_idx'), models.Index(fields=['source'], name='logs_logent_source_d42def_idx')],
            },
        ),
        migrations.CreateModel(
            name='LogBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name/identifier for this batch', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of this log batch')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('total_entries', models.IntegerField(default=0)),
                ('processed_entries', models.IntegerField(default=0)),
                ('anomalies_detected', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('log_entries', models.ManyToManyField(blank=True, help_text='Log entries in this batch', related_name='batches', to='logs.logentry')),
            ],
            options={
                'verbose_name': 'Log Batch',
                'verbose_name_plural': 'Log Batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnomalyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anomaly_type', models.CharField(choices=[('FREQUENCY', 'Frequency Anomaly'), ('PATTERN', 'Pattern Anomaly'), ('SEVERITY', 'Severity Anomaly'), ('BEHAVIORAL', 'Behavioral Anomaly'), ('STATISTICAL', 'Statistical Anomaly'), ('ML_DETECTED', 'Machine Learning Detected'), ('RULE_BASED', 'Rule Based Detection')], help_text='Type of anomaly detected', max_length=20)),
                ('confidence_score', models.FloatField(help_text='Confidence score between 0.0 and 1.0')),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('detection_method', models.CharField(default='unknown', help_text='Method used to detect this anomaly', max_length=50)),
                ('model_version', models.CharField(default='v1.0', help_text='Version of the detection model used', max_length=20)),
                ('description', models.TextField(help_text='Detailed description of the anomaly')),
                ('suggested_action', models.TextField(blank=True, help_text='Suggested action to address this anomaly')),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('INVESTIGATING', 'Under Investigation'), ('FALSE_POSITIVE', 'False Positive'), ('RESOLVED', 'Resolved'), ('IGNORED', 'Ignored')], default='OPEN', max_length=15)),
                ('is_resolved', models.BooleanField(default=False, help_text='Whether this anomaly has been resolved')),
                ('detected_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the anomaly was first detected')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When the anomaly was resolved', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='User assigned to investigate this anomaly', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('log_entry', models.ForeignKey(help_text='The log entry this anomaly report refers to', on_delete=django.db.models.deletion.CASCADE, related_name='anomaly_reports', to='logs.logentry')),
            ],
            options={
                'verbose_name': 'Anomaly Report',
                'verbose_name_plural': 'Anomaly Reports',
                'ordering': ['-detected_at'],
                'indexes': [models.Index(fields=['detected_at'], name='logs_anomal_detecte_0c19df_idx'), models.Index(fields=['anomaly_type'], name='logs_anomal_anomaly_89bf0a_idx'), models.Index(fields=['status'], name='logs_anomal_status_e5ca4c_idx'), models.Index(fields=['confidence_score'], name='logs_anomal_confide_123a87_idx')],
            },
        ),
    ]
